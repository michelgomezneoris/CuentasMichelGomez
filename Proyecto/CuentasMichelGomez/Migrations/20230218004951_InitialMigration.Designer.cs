// <auto-generated />
using System;
using CuentasMichelGomez.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CuentasMichelGomez.Migrations
{
    [DbContext(typeof(CuentasDbContext))]
    [Migration("20230218004951_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CuentasMichelGomez.Models.Cliente", b =>
                {
                    b.Property<long>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cliente_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ClienteId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("boolean")
                        .HasColumnName("estado");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("persona_id");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("ClienteId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Cuenta", b =>
                {
                    b.Property<long>("CuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cuenta_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CuentaId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("cliente_id");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean")
                        .HasColumnName("estado");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("numero_cuenta");

                    b.Property<int>("Saldo")
                        .HasColumnType("integer")
                        .HasColumnName("saldo");

                    b.Property<long>("TipoCuentaId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipo_cuenta_id");

                    b.HasKey("CuentaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoCuentaId");

                    b.ToTable("cuenta");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Movimiento", b =>
                {
                    b.Property<long>("MovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("movimiento_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MovimientoId"));

                    b.Property<long>("CuentaId")
                        .HasColumnType("bigint")
                        .HasColumnName("cuenta_id");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("Saldo")
                        .HasColumnType("integer")
                        .HasColumnName("saldo");

                    b.Property<int>("SaldoInicial")
                        .HasColumnType("integer")
                        .HasColumnName("saldo_inicial");

                    b.Property<long>("TipoMovimientoId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipo_movimiento_id");

                    b.Property<int>("Valor")
                        .HasColumnType("integer")
                        .HasColumnName("valor");

                    b.HasKey("MovimientoId");

                    b.HasIndex("CuentaId");

                    b.HasIndex("TipoMovimientoId");

                    b.ToTable("movimiento");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Persona", b =>
                {
                    b.Property<long>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("persona_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaId"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("direccion");

                    b.Property<int>("Edad")
                        .HasColumnType("integer")
                        .HasColumnName("edad");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("genero");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("telefono");

                    b.Property<long>("TipoIdentificacionId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipo_identificacion_id");

                    b.HasKey("PersonaId");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.TipoCuenta", b =>
                {
                    b.Property<long>("TipoCuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipo_cuenta_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoCuentaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("nombre");

                    b.HasKey("TipoCuentaId");

                    b.ToTable("tipo_cuenta");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.TipoIdentificacion", b =>
                {
                    b.Property<long>("TipoIdentificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipo_identificacion_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoIdentificacionId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("nombre");

                    b.HasKey("TipoIdentificacionId");

                    b.ToTable("tipo_identificacion");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.TipoMovimiento", b =>
                {
                    b.Property<long>("TipoMovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipo_movimiento_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoMovimientoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("Varchar(1024)")
                        .HasColumnName("nombre");

                    b.HasKey("TipoMovimientoId");

                    b.ToTable("tipo_movimiento");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Cliente", b =>
                {
                    b.HasOne("CuentasMichelGomez.Models.Persona", "Persona")
                        .WithOne("Cliente")
                        .HasForeignKey("CuentasMichelGomez.Models.Cliente", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Cuenta", b =>
                {
                    b.HasOne("CuentasMichelGomez.Models.Cliente", "Cliente")
                        .WithMany("Cuentas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CuentasMichelGomez.Models.TipoCuenta", "TipoCuenta")
                        .WithMany("Cuentas")
                        .HasForeignKey("TipoCuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoCuenta");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Movimiento", b =>
                {
                    b.HasOne("CuentasMichelGomez.Models.Cuenta", "Cuenta")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CuentasMichelGomez.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany("Movimientos")
                        .HasForeignKey("TipoMovimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Persona", b =>
                {
                    b.HasOne("CuentasMichelGomez.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany("Personas")
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Cliente", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Cuenta", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.Persona", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.TipoCuenta", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.TipoIdentificacion", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("CuentasMichelGomez.Models.TipoMovimiento", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
